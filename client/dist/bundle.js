/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/business/business_catalog.js":
/*!*********************************************!*\
  !*** ./src/js/business/business_catalog.js ***!
  \*********************************************/
/*! exports provided: BusinessCatalog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BusinessCatalog\", function() { return BusinessCatalog; });\n/* harmony import */ var _common_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/entity */ \"./src/js/common/entity.js\");\n/* harmony import */ var _business_panel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./business_panel */ \"./src/js/business/business_panel.js\");\n\n\n\n/**\n * Renders the list of purchaseable businesses\n */\nclass BusinessCatalog extends _common_entity__WEBPACK_IMPORTED_MODULE_0__[\"Entity\"] {\n    constructor(gr) {\n        super();\n\n        this.registry = gr;\n        // this.busList = businessLookup;\n        let i=0;\n        this.registry.businessLookup.forEach((bd) => {\n            this.addBusiness(bd, i);\n            i++;\n        })\n    }\n\n    addBusiness(bd, index) {\n        let bPanel = new _business_panel__WEBPACK_IMPORTED_MODULE_1__[\"BusinessPanel\"](bd, this.registry);\n\n        let x = index % 2;\n        let y = Math.floor(index/2);\n\n        bPanel.setPos((x * 390), (y * (150 + 10)));\n        this.children.push(bPanel);\n    }\n\n    render(ctx) {\n    }\n}\n\n//# sourceURL=webpack:///./src/js/business/business_catalog.js?");

/***/ }),

/***/ "./src/js/business/business_data.js":
/*!******************************************!*\
  !*** ./src/js/business/business_data.js ***!
  \******************************************/
/*! exports provided: BusinessData, BusinessState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BusinessData\", function() { return BusinessData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BusinessState\", function() { return BusinessState; });\n/**\n * BusinessData - holds info on a business type as retrieved from the server\n */\nclass BusinessData {\n    constructor(data) {\n        this.id = data.id || -1;\n        this.name = data.name || 'business';\n        this.baseCost = data.cost || 1;\n        this.costMult = data.costMult || 1;\n        this.time = data.time || 10;\n        this.icon = data.icon || 'null.png';\n        this.moneyPerFill = data.funds || 1;\n        this.managerCost = data.managerCost || 100;\n    }\n}\n\n/**\n * BusinessState - holds the current state of a given business type for the player\n */\nclass BusinessState {\n    constructor() {\n        this.id = -1;\n        this.numOwned = 0;\n        this.timeToFill_MS = 10 * 1000;   // time to fill, in milliseconds\n        this.moneyPerFill = 10;\n        this.costOfNext = 10;\n        this.autoStart = false;\n        this.lastStarted = -1;    // timestamp\n        this.fillAmount = 0;\n        this.isTicking = false;\n\n        this.didRestart = false;    // flag used for stat tracking\n\n        // used to apply upgrades\n        this.moneyMultiplier = 1;\n        this.timeMultiplier = 1;\n        this.costMultiplier = 1;\n    }\n\n    resetMultipliers() {\n        this.moneyMultiplier = 1;\n        this.timeMultiplier = 1;\n        this.costMultiplier = 1;\n    }\n\n    setFromBusinessData(bd) {\n        this.id = bd.id;\n        this.timeToFill_MS = bd.time * 1000;\n        this.moneyPerFill = bd.moneyPerFill;\n        this.costOfNext = bd.baseCost;\n        this.baseCost = bd.baseCost;\n        this.costMult = bd.costMult;\n    }\n\n    addAndUpdateCost(numToBuy) {\n        this.numOwned += numToBuy;\n        this.updateCost();\n    }\n\n    updateCost() {\n        this.costOfNext = (this.baseCost * (Math.pow(this.costMult, this.numOwned))) * this.costMultiplier;\n    }\n\n    resetTimer() {\n        // this.lastStarted = Date.now();\n        this.fillAmount = 0;\n        this.isTicking = this.autoStart;\n        if (this.autoStart) {\n            this.lastStarted = Date.now();\n        } else {\n            this.lastStarted = -1;\n        }\n    }\n\n    maybeCollect() {\n        let collected = 0;\n        if (this.fillAmount > 0.99) {\n            this.resetTimer();\n            collected = (this.moneyPerFill * this.numOwned * this.moneyMultiplier);\n        }\n        return collected;\n    }\n\n    collectFunds() {\n        let collected = (this.moneyPerFill * this.numOwned * this.moneyMultiplier);\n        return collected;\n    }\n\n    startProgress() {\n        this.resetTimer();\n        this.lastStarted = Date.now();\n        this.isTicking = true;\n    }\n\n    timeToFill() {\n        return Math.max(1, (this.timeToFill_MS * this.timeMultiplier));\n    }\n\n    tickAndCollectFunds(timestamp) {\n        this.didRestart = false;\n        if (this.numOwned < 1) return 0;\n        if (!this.isTicking) return 0;\n\n        let timeSinceLast = timestamp - this.lastStarted;\n        this.fillAmount = (timeSinceLast / this.timeToFill())\n        \n        if (this.fillAmount > 0.99) {\n            this.resetTimer();\n            this.didRestart = this.autoStart;\n            return this.collectFunds();\n        }\n        return 0;\n    }\n\n    moneyPerTick() {\n        return (this.moneyPerFill * this.numOwned * this.moneyMultiplier);\n    }\n\n    ticksToFunds(ticks) {\n        return (ticks * this.moneyPerTick());\n    }\n\n    applyOfflineTicks(now) {\n        if (this.lastStarted === -1) return 0;\n\n        let timeSinceLastStartMS = (now - this.lastStarted);\n        let timePerFill = (this.timeToFill_MS * this.timeMultiplier);\n        let ticks = Math.floor(timeSinceLastStartMS / timePerFill);\n            \n        // credit the player with any fractional time\n        let extraMS = timeSinceLastStartMS - (ticks * timePerFill);\n        this.lastStarted = Date.now() - extraMS;\n        this.fillAmount = (now - this.lastStarted) / timePerFill;\n\n        // console.log(`${this.id} ticks: ${ticks} extraMS ${extraMS}`);\n\n        // make sure progress continues if it was previously started\n        // or the player has purchased a manager\n        if (this.autoStart || ticks < 1) {\n            this.isTicking = true;\n        }\n\n        if (!this.autoStart) {\n            // if the player doesn't have a manager, it can only have\n            // completed a single time\n            ticks = Math.min(ticks, 1);\n        }\n\n        // return (ticks * this.moneyPerFill * this.numOwned * this.moneyMultiplier);\n        return ticks;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/business/business_data.js?");

/***/ }),

/***/ "./src/js/business/business_lookup.js":
/*!********************************************!*\
  !*** ./src/js/business/business_lookup.js ***!
  \********************************************/
/*! exports provided: BusinessLookup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BusinessLookup\", function() { return BusinessLookup; });\n/* harmony import */ var _business_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./business_data */ \"./src/js/business/business_data.js\");\n\n\nclass BusinessLookup {\n    constructor(gr) {\n        this.registry = gr;\n        this.listings = new Map();\n    }\n\n    initFromData(businessJSON) {\n        if (businessJSON) {\n            businessJSON.forEach(business => {\n                let b = new _business_data__WEBPACK_IMPORTED_MODULE_0__[\"BusinessData\"](business);\n                this.listings.set(b.id, b);\n            });\n        }\n\n        if (this.onLoad) {\n            this.onLoad();\n        }\n    }\n\n    forEach(f) {\n        this.listings.forEach((bd) => {\n            f(bd);\n        });\n    }\n\n    getBusinessDataById(id) {\n        if (this.listings.has(id)) {\n            return this.listings.get(id);\n        }\n        return null;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/business/business_lookup.js?");

/***/ }),

/***/ "./src/js/business/business_panel.js":
/*!*******************************************!*\
  !*** ./src/js/business/business_panel.js ***!
  \*******************************************/
/*! exports provided: BusinessPanel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BusinessPanel\", function() { return BusinessPanel; });\n/* harmony import */ var _business_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./business_data */ \"./src/js/business/business_data.js\");\n/* harmony import */ var _common_entity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/entity */ \"./src/js/common/entity.js\");\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/utils */ \"./src/js/common/utils.js\");\n/* harmony import */ var _ui_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ui/button */ \"./src/js/ui/button.js\");\n/* harmony import */ var _ui_button_buy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ui/button_buy */ \"./src/js/ui/button_buy.js\");\n/* harmony import */ var _ui_styles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ui/styles */ \"./src/js/ui/styles.js\");\n\n\n\n\n\n\n\nconst WIDTH = 380;\nconst HEIGHT = 150;\n\nclass BusinessPanel extends _common_entity__WEBPACK_IMPORTED_MODULE_1__[\"Entity\"] {\n    constructor(bd, gr) {\n        super();\n        this.data = bd;\n        this.registry = gr;\n\n        this.bounds = {\n            x: WIDTH,\n            y: HEIGHT\n        }\n\n        this.canAfford = false;\n\n        this.setupButtons();\n    }\n\n    setupButtons() {\n        const currCost = this.registry.playerInventory.costOfNextBusiness(this.data.id);\n\n        this.buyButton = new _ui_button_buy__WEBPACK_IMPORTED_MODULE_4__[\"BuyButton\"]({\n            label: 'buy',\n            width: 100,\n            num: 1,\n            cost: currCost,\n            callback: () => {this.attemptPurchase();}\n        });\n        this.buyButton.setPos(120, 90);\n        this.children.push(this.buyButton);\n\n        this.startButton = new _ui_button__WEBPACK_IMPORTED_MODULE_3__[\"Button\"]({\n            label: 'start',\n            width: 100,\n            callback: () => {this.startBusiness();}\n        });\n        this.startButton.setPos(10, 90);\n        this.startButton.enabled = true;\n        this.children.push(this.startButton);\n    }\n\n    onClick(pos) {\n        // only buy on click if it's the first purchase\n        // subsequent purchases require clicking on the \"buy\" button, specifically\n        const owned = this.registry.playerInventory.numOwned(this.data.id);\n        if (owned > 0) return;\n        \n        this.attemptPurchase();\n    }\n\n    attemptPurchase() {\n        this.registry.playerInventory.maybePurchaseBusiness(this.data.id);\n\n        const currCost = this.registry.playerInventory.costOfNextBusiness(this.data.id);\n        this.buyButton.cost = currCost;\n    }\n\n    attemptCollect() {\n        this.registry.playerInventory.maybeCollectFunds(this.data.id);\n    }\n\n    startBusiness() {\n        this.registry.playerInventory.maybeStartBusiness(this.data.id);\n    }\n\n    _drawName(ctx) {\n        ctx.save();\n\n        ctx.textAlign = 'center';\n        ctx.font = '40px helvetica';\n\n        ctx.translate(WIDTH/2, HEIGHT/2);\n        ctx.fillText(this.data.name, 0, 0);\n        ctx.restore();\n    }\n\n    _drawFirstCost(ctx)  {\n        const cost = this.registry.playerInventory.costOfNextBusiness(this.data.id);\n\n        ctx.save();\n        ctx.translate(WIDTH/2, HEIGHT/2 + 40);\n\n        ctx.textAlign = 'center';\n        ctx.font = '20px helvetica';\n        ctx.fillText(Object(_common_utils__WEBPACK_IMPORTED_MODULE_2__[\"formatMoney\"])(cost), 0, 0);\n\n        ctx.restore();\n    }\n\n    _renderPurchaseOption(ctx) {\n        // const canAfford = this.registry.playerInventory.canAffordBusiness(this.data.id);\n\n        ctx.save();\n        this._drawName(ctx);\n        this._drawFirstCost(ctx);\n        ctx.restore();\n    }\n\n    _renderStatus(ctx) {\n        const { playerInventory } = this.registry;\n\n        ctx.save();\n\n        const owned = playerInventory.numOwned(this.data.id);\n\n        // draw numOwned\n        let numOwnedStr = `${this.data.name}: ${owned}`;\n        ctx.save();\n        ctx.font = '20px helvetica';\n        ctx.fillText(numOwnedStr, 20, 30);\n        ctx.restore();\n\n        // render progress bar\n        ctx.save();\n        const fillAmount = playerInventory.getProgress(this.data.id);\n        ctx.fillStyle = '#00AA00';\n        ctx.translate(20, 40);\n        const fillWidth = (fillAmount * 200);\n        \n        let radius = Math.min(fillWidth/2, 5);\n        if (fillWidth > 10) {\n            Object(_common_utils__WEBPACK_IMPORTED_MODULE_2__[\"drawRoundedRect\"])(ctx, fillWidth, 40, radius);\n            ctx.fill();    \n        } else {\n            ctx.fillRect(0, 0, fillWidth, 40);\n        }\n        \n        ctx.restore();\n\n        // draw money per tick\n        ctx.save();\n\n        ctx.restore();\n        \n        ctx.save();\n        ctx.translate(20, 40);\n        Object(_common_utils__WEBPACK_IMPORTED_MODULE_2__[\"drawRoundedRect\"])(ctx, 200, 40, 5);\n        ctx.stroke();\n        ctx.restore();\n\n        ctx.restore();\n    }\n\n    updateButtons() {\n        const { playerInventory } = this.registry;\n\n        this.canAfford = playerInventory.canAffordBusiness(this.data.id);\n\n        const owned = playerInventory.numOwned(this.data.id);\n        const nextCost = playerInventory.costOfNextBusiness(this.data.id);\n\n        this.buyButton.visible = (owned > 0);    \n        this.startButton.visible = (owned > 0);\n\n        this.buyButton.enabled = this.canAfford;\n        this.startButton.enabled = playerInventory.canStart(this.data.id);\n\n        this.buyButton.cost = nextCost;\n    }\n\n    render(ctx) {\n        this.updateButtons();\n\n        const owned = this.registry.playerInventory.numOwned(this.data.id);\n\n        ctx.save();\n\n        ctx.fillStyle = (owned > 0) ? _ui_styles__WEBPACK_IMPORTED_MODULE_5__[\"Colors\"].backColorOff : _ui_styles__WEBPACK_IMPORTED_MODULE_5__[\"Colors\"].backColorOn;\n        ctx.strokeStyle = _ui_styles__WEBPACK_IMPORTED_MODULE_5__[\"Colors\"].borderColorMain;\n        ctx.lineWidth = 5;\n\n        Object(_common_utils__WEBPACK_IMPORTED_MODULE_2__[\"drawRoundedRect\"])(ctx, WIDTH, HEIGHT, 20);\n\n        ctx.stroke();\n\n        if (this.canAfford || owned > 0) ctx.fill();\n        ctx.restore();\n\n        \n        if (owned > 0) {\n            this._renderStatus(ctx);\n        } else {\n            this._renderPurchaseOption(ctx);\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/business/business_panel.js?");

/***/ }),

/***/ "./src/js/common/entity.js":
/*!*********************************!*\
  !*** ./src/js/common/entity.js ***!
  \*********************************/
/*! exports provided: Entity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Entity\", function() { return Entity; });\n/**\n * Class for a game entity\n * (something that gets drawn to the screen, and can receive clicks)\n */\n\nclass Entity {\n    constructor() {\n        this.pos = {\n            x: 0,\n            y: 0\n        }\n        this.bounds = {\n            x: 0,\n            y: 0\n        }\n\n        this.rotation = 0;\n        this.children = [];\n\n        this.show();\n    }\n\n    // no-op in base class\n    onClick(pos) {}\n    render(ctx) {}\n\n    setPos(x, y) {\n        this.pos.x = x;\n        this.pos.y = y;\n    }\n\n    show() {\n        this.visible = true;\n        this.enabled = true;\n    }\n\n    hide() {\n        this.visible = false;\n        this.enabled = false;\n    }\n\n    // derives local click pos and passes event down to children\n    handleClickInternal(pos) {\n        if (!this.enabled || !this.visible) return;\n        \n        let localPos = {\n            x: pos.x - this.pos.x,\n            y: pos.y - this.pos.y\n        }\n\n        if ((localPos.x >= 0 && localPos.x < this.bounds.x) && \n            (localPos.y > 0 && localPos.y < this.bounds.y)) {\n                this.onClick(localPos);\n        }\n        this.children.forEach(c => {\n            c.handleClickInternal(localPos);\n        })\n    }\n\n    // handles local position and passes rendering down to children\n    _render(ctx) {\n        if (!this.visible) return;\n\n        ctx.save();\n        ctx.translate(this.pos.x, this.pos.y);\n        \n        this.render(ctx);\n\n        this.children.forEach(c => {\n            c._render(ctx);\n        });\n        ctx.restore();\n    }\n\n\n}\n\n//# sourceURL=webpack:///./src/js/common/entity.js?");

/***/ }),

/***/ "./src/js/common/utils.js":
/*!********************************!*\
  !*** ./src/js/common/utils.js ***!
  \********************************/
/*! exports provided: formatMoney, drawRoundedRect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatMoney\", function() { return formatMoney; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawRoundedRect\", function() { return drawRoundedRect; });\n\nconst formatMoney = (n) => {\n    let s = parseFloat(n).toFixed(2);\n    return `$${s}`;\n}\n\nconst drawRoundedRect = (ctx, w, h, r) => {\n    ctx.beginPath();\n        \n    ctx.moveTo(r, 0);\n    ctx.lineTo(w-r, 0);\n    ctx.arcTo(w, 0, w, r, r);\n    ctx.lineTo(w, h-r);\n    ctx.arcTo(w, h, w-r, h, r);\n    ctx.lineTo(r,h);\n    ctx.arcTo(0, h, 0, h-r, r);\n    ctx.lineTo(0,r);\n    ctx.arcTo(0, 0, r, 0, r);\n\n    ctx.closePath();\n}\n\n//# sourceURL=webpack:///./src/js/common/utils.js?");

/***/ }),

/***/ "./src/js/game.js":
/*!************************!*\
  !*** ./src/js/game.js ***!
  \************************/
/*! exports provided: ClickerClient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClickerClient\", function() { return ClickerClient; });\n/* harmony import */ var _business_business_lookup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./business/business_lookup */ \"./src/js/business/business_lookup.js\");\n/* harmony import */ var _business_business_catalog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./business/business_catalog */ \"./src/js/business/business_catalog.js\");\n/* harmony import */ var _game_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./game_registry */ \"./src/js/game_registry.js\");\n/* harmony import */ var _player_player_inventory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./player/player_inventory */ \"./src/js/player/player_inventory.js\");\n/* harmony import */ var _player_player_storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./player/player_storage */ \"./src/js/player/player_storage.js\");\n/* harmony import */ var _upgrades_player_stats__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./upgrades/player_stats */ \"./src/js/upgrades/player_stats.js\");\n/* harmony import */ var _game_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./game_data */ \"./src/js/game_data.js\");\n/* harmony import */ var _ui_game_screen__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ui/game_screen */ \"./src/js/ui/game_screen.js\");\n/* harmony import */ var _upgrades_achievements__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./upgrades/achievements */ \"./src/js/upgrades/achievements.js\");\n/* harmony import */ var _upgrades_upgrades__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./upgrades/upgrades */ \"./src/js/upgrades/upgrades.js\");\n/* harmony import */ var _ui_toast_manager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ui/toast_manager */ \"./src/js/ui/toast_manager.js\");\n/* harmony import */ var _ui_styles__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ui/styles */ \"./src/js/ui/styles.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * ClickerClient: main game class\n */\n\nconst TICK_TIME_MS = 500;\n\nclass ClickerClient {\n\n    constructor(stageId) {\n        let mainScreen = null;\n        \n        this.initTimers();\n        this.initCanvas(stageId);\n\n        this.gameRegistry = new _game_registry__WEBPACK_IMPORTED_MODULE_2__[\"GameRegistry\"]();\n\n        this.gameRegistry.gameData = new _game_data__WEBPACK_IMPORTED_MODULE_6__[\"GameData\"]();\n        this.gameRegistry.gameData.getFromServer(this.startGame.bind(this));\n\n        this.gameRegistry.businessLookup = new _business_business_lookup__WEBPACK_IMPORTED_MODULE_0__[\"BusinessLookup\"](this.gameRegistry);\n        this.gameRegistry.playerStorage = new _player_player_storage__WEBPACK_IMPORTED_MODULE_4__[\"PlayerStorage\"](this.gameRegistry);\n        this.gameRegistry.playerStats = new _upgrades_player_stats__WEBPACK_IMPORTED_MODULE_5__[\"PlayerStats\"](this.gameRegistry);\n        this.gameRegistry.achievements = new _upgrades_achievements__WEBPACK_IMPORTED_MODULE_8__[\"AchievementTracker\"](this.gameRegistry);\n        this.gameRegistry.upgrades = new _upgrades_upgrades__WEBPACK_IMPORTED_MODULE_9__[\"UpgradesList\"](this.gameRegistry);\n        \n        this.children = [];\n\n        document.onmousedown = this.mouseDown.bind(this);\n\n        this.update();\n    }\n\n    initCanvas(stageId) {\n        this.canvasEl = document.getElementById(stageId);\n        this.ctx = this.canvasEl.getContext('2d');\n\n        this.bounds = {\n            width: this.canvasEl.clientWidth,\n            height: this.canvasEl.clientHeight,\n        }\n\n        this.pos = {\n            x: this.canvasEl.offsetLeft,\n            y: this.canvasEl.offsetTop\n        };\n    }\n\n    mouseDown(evt) {\n        let localPos = {\n            x: evt.clientX - this.pos.x,\n            y: evt.clientY - this.pos.y            \n        }\n        this.children.forEach(c => {\n            c.handleClickInternal(localPos);\n        })\n\n    }\n\n    initTimers() {\n        this.lastTime = Date.now();\n        this.tickTimer = 0;\n\n    }\n\n    initBusinessCatalog() {\n        this.businessCatalog = new _business_business_catalog__WEBPACK_IMPORTED_MODULE_1__[\"BusinessCatalog\"](this.busList);\n        this.businessCatalog.setPos(10, 10);\n        this.children.push(this.businessCatalog);\n    }\n\n    startGame() {\n        const { \n            gameData,\n            businessLookup,\n            achievements,\n            playerStorage,\n            upgrades\n        } = this.gameRegistry;\n\n        businessLookup.initFromData(gameData.businessJSON);\n        achievements.initFromData(gameData.achievementJSON);\n        upgrades.initFromData(gameData.upgradesJSON);\n\n        this.gameRegistry.playerInventory =  new _player_player_inventory__WEBPACK_IMPORTED_MODULE_3__[\"PlayerInventory\"](this.gameRegistry);\n\n        this.mainScreen = new _ui_game_screen__WEBPACK_IMPORTED_MODULE_7__[\"GameScreen\"](this.gameRegistry);\n        this.children.push(this.mainScreen);\n\n        // put toasts on top of everything else\n        this.gameRegistry.toasts = new _ui_toast_manager__WEBPACK_IMPORTED_MODULE_10__[\"ToastManager\"](this.gameRegistry);\n        this.gameRegistry.toasts.setPos(0, 0);\n        this.mainScreen.children.push(this.gameRegistry.toasts);\n\n        playerStorage.loadPlayerData();\n        achievements.checkAchievements(false);\n        achievements.notifyPlayer = true;\n    }\n\n    /**\n     * function to handle ticking various update-able objects\n     * (separate from rendering)\n     */\n    tick() {\n        // update\n    }\n\n    /**\n     * render loop\n     */\n    render(dt) {\n        let ctx = this.ctx;\n        let { width, height } = this.bounds;        \n\n        ctx.clearRect(0, 0, width, height);\n        ctx.save();\n\n        ctx.save();\n        ctx.fillStyle = _ui_styles__WEBPACK_IMPORTED_MODULE_11__[\"Colors\"].backColorMain; // '#ffcb74';\n        ctx.fillRect(0, 0, this.bounds.width, this.bounds.height);\n        ctx.restore();\n\n        if (this.mainScreen) {\n            this.mainScreen._render(ctx);\n        } else {\n            ctx.save();\n            ctx.translate(width/2, height/2);\n            ctx.fillText('loading', 0, 0);\n\n            ctx.restore();\n        }\n\n        ctx.restore();\n    }\n\n    update() {\n        const { playerInventory } = this.gameRegistry;\n\n        let curr = Date.now();\n        let deltaTime = curr - this.lastTime;\n        this.lastTime = curr;\n\n        if (playerInventory) {\n            playerInventory.tick();\n        }\n\n        // draw animation as often as possible\n        this.render(deltaTime);\n\n        // only tick if necessary\n        this.tickTimer += deltaTime;\n        if (this.tickTimer > TICK_TIME_MS) {\n            this.tick();\n            this.tickTimer = 0;\n        }\n\n        requestAnimationFrame(this.update.bind(this));\n    }\n\n}\n\n//# sourceURL=webpack:///./src/js/game.js?");

/***/ }),

/***/ "./src/js/game_data.js":
/*!*****************************!*\
  !*** ./src/js/game_data.js ***!
  \*****************************/
/*! exports provided: GameData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GameData\", function() { return GameData; });\nconst SERVER_URL_DEV = 'http://localhost:8080';\nconst SERVER_URL = 'http://polar-earth-02456.herokuapp.com'\n\nclass GameData {\n    constructor() {\n        this.businessJSON = null;\n        this.achievementJSON = null;\n        this.upgradesJSON = null;\n\n        this.loaded = false;\n    }\n\n    getFromServer(callback) {\n        fetch(`${SERVER_URL}/gamedata`).then(res => {\n            res.json().then(resJSON => {\n                this.businessJSON = resJSON.businesses;\n                this.achievementJSON = resJSON.achievements;\n                this.upgradesJSON = resJSON.upgrades;\n\n                this.loaded = true;\n                callback();\n            });\n        });\n    }\n}\n\n//# sourceURL=webpack:///./src/js/game_data.js?");

/***/ }),

/***/ "./src/js/game_registry.js":
/*!*********************************!*\
  !*** ./src/js/game_registry.js ***!
  \*********************************/
/*! exports provided: GameRegistry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GameRegistry\", function() { return GameRegistry; });\nclass GameRegistry {\n    constructor() {\n        // BusinessLookup instance\n        this.businessLookup = null;\n\n        // PlayerInventory instance\n        this.playerInventory = null;\n        // PlayerStorage instace\n        this.playerStorage = null;\n        // PlayerStats instance\n        this.playerStats = null;\n\n        // GameData\n        this.gameData = null;\n\n        // AchievementTracker\n        this.achievements = null;\n\n        // ToastManager\n        this.toasts = null;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/game_registry.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/js/game.js\");\n\n\nlet client = new _game__WEBPACK_IMPORTED_MODULE_0__[\"ClickerClient\"]('stage');\n\n//# sourceURL=webpack:///./src/js/index.js?");

/***/ }),

/***/ "./src/js/player/player_inventory.js":
/*!*******************************************!*\
  !*** ./src/js/player/player_inventory.js ***!
  \*******************************************/
/*! exports provided: PlayerInventory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PlayerInventory\", function() { return PlayerInventory; });\n/* harmony import */ var _business_business_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../business/business_data */ \"./src/js/business/business_data.js\");\n\n\nconst STARTING_FUNDS = 1;\n\nclass PlayerInventory {\n    constructor(registry) {\n        this.registry = registry;\n\n        this.money = STARTING_FUNDS;\n        this.businessStates = new Map();\n        this.ownedUpgrades = new Set();\n\n        this.initBusinesses();\n    }\n\n    serialize() {\n        let status = {};\n        status.money = this.money;\n        status.upgrades = Array.from(this.ownedUpgrades);\n        status.businesses = [];\n\n        this.businessStates.forEach(businessState => {\n            let state = {\n                id: businessState.id,\n                num: businessState.numOwned,\n                lastStart: businessState.lastStarted,\n                autoStart: businessState.autoStart\n            };\n            status.businesses.push(state);\n        });\n        return JSON.stringify(status);\n    }\n\n    deserialize(dataJSON) {\n        const data = JSON.parse(dataJSON);\n\n        if (data) {\n            if (data.money) {\n                this.money = data.money;\n            }\n\n            if (data.businesses) {\n                data.businesses.forEach(storedBusinessData => {\n                    const { id, num, lastStart, autoStart } = storedBusinessData;\n                    \n                    if (this.businessStates.has(id)) {\n                        const bState = this.businessStates.get(id);\n                        bState.numOwned = num;\n                        bState.autoStart = autoStart;\n                        bState.lastStarted = lastStart;\n                        bState.updateCost();\n                    }\n                });\n            }\n\n            if (data.upgrades) {\n                data.upgrades.forEach(upID => {\n                    this.ownedUpgrades.add(upID);\n                })\n            }\n        }\n\n        this.recalcBonuses();\n        this.applyOfflineTicks();\n\n    }\n\n    resetData() {\n        this.money = STARTING_FUNDS;\n        this.ownedUpgrades = new Set();\n        this.businessStates.forEach(bState => {\n            bState.numOwned = 0;\n            bState.lastStarted = -1;\n            bState.autoStart = false;\n            bState.updateCost();\n            bState.resetMultipliers();\n        });\n    }\n\n    // apply funds generated while offline\n    applyOfflineTicks() {\n        const ts = Date.now();\n        const { playerStats } = this.registry;\n        let offlineTotal = 0;\n        this.businessStates.forEach(bState => {\n            // offlineTotal += bState.applyOfflineTicks(ts);\n            let ticks = bState.applyOfflineTicks(ts);\n            offlineTotal += bState.ticksToFunds(ticks);\n            if (ticks > 1) {\n                // ticks is the total number to apply credit for, including\n                // the one last started with the client running, so only\n                // add ticks that happened offline to the manager total\n                playerStats.registerManagerStart(bState.id, (ticks-1));\n            }\n        });\n\n        this.addFunds(offlineTotal);\n    }\n\n    // create a new BusinessState for each business\n    initBusinesses() {\n        this.registry.businessLookup.forEach(businessData => {\n            let businessState = new _business_business_data__WEBPACK_IMPORTED_MODULE_0__[\"BusinessState\"]();\n            businessState.setFromBusinessData(businessData);\n            this.businessStates.set(businessData.id, businessState);\n        });\n    }\n\n    get currCash() {\n        return this.money;\n    }\n\n    chargePlayer(cost) {\n        if (cost < 0) return;\n        this.money -= cost;\n\n        const { playerStats, playerStorage } = this.registry;\n        playerStats.registerMoneySpent(cost);\n        playerStorage.maybeSaveData();\n    }\n\n    addFunds(funds) {\n        if (funds < 0) return;\n        this.money += funds;\n\n        const { playerStats, playerStorage } = this.registry;\n        playerStats.registerMoneyEarned(funds);\n        playerStorage.maybeSaveData();\n    }\n\n    canAfford(cost) {\n        return (cost <= this.money);\n    }\n\n    costOfNextBusiness(bID) {\n        if (this.businessStates.has(bID)) {\n            return this.businessStates.get(bID).costOfNext;\n        }\n        return 0;\n    }\n\n    costOfNextBusinesses(bID, numToBuy) {\n        // TODO: flesh this out for buying N at once\n        return this.costOfNextBusiness(bID);\n    }\n\n    canAffordBusiness(bID) {\n        return this.canAfford(this.costOfNextBusiness(bID));\n    }\n\n    maybePurchaseBusiness(bID) {\n        const cost = this.costOfNextBusiness(bID);\n\n        if (this.canAfford(cost)) {\n            this.chargePlayer(cost);\n            this.purchaseBusiness(bID);\n        }\n    }\n\n    purchaseBusiness(bID, numToBuy = 1) {\n        console.log(`BUYING ONE OF TYPE: ${bID}`);\n\n        const { playerStorage, playerStats } = this.registry;\n\n        const businessData = this.registry.businessLookup.getBusinessDataById(bID);\n\n        const bState = this.businessStates.get(bID);\n        bState.addAndUpdateCost(numToBuy, businessData.baseCost, businessData.costMult);\n\n        playerStats.registerBusinessBought(bID);\n        playerStorage.saveData();\n        // this.debugPrintInv();\n    }\n\n    debugPrintInv() {\n        this.businessStates.forEach(bState => {\n            console.log(`type: ${bState.id} numOwned: ${bState.numOwned}`);\n        })\n    }\n\n    playerOwnsUpgrade(uID) {\n        return this.ownedUpgrades.has(uID);\n    }\n\n    // purchase upgrades\n    maybePurchaseUpgrade(uID) {\n        // TODO: add this in\n        const { upgrades, achievements, playerStats } = this.registry;\n\n        // don't buy it if we have it\n        if (this.ownedUpgrades.has(uID)) {\n            return;\n        }\n        const upgradeData = upgrades.getById(uID);\n        if (upgradeData === null) {\n            return;\n        }\n\n        // don't buy it if we can't afford it\n        if (this.canAfford(upgradeData.cost)) {\n            // don't buy it if we haven't completed the requirements\n            if (achievements.playerHasUnlockedAll(upgradeData.requirements)) {\n\n                this.chargePlayer(upgradeData.cost);\n                this.ownedUpgrades.add(upgradeData.id);\n                playerStats.registerUpgradeBought(upgradeData.id);\n\n                this.recalcBonuses();\n                console.log(`BOUGHT UPGRADE: ${upgradeData.name}`);\n\n            } else {\n                console.log('UNMET REQUIREMENTS');\n            }\n        } else {\n            console.log(`Can't afford!`);\n        }\n    }\n\n\n    // TODO: this could use a refactor\n    recalcBonuses() {\n        const { upgrades } = this.registry;\n        \n        // first step: stack all the bonuses from owned upgrades\n        const upgradeEffects = new Map();\n        upgradeEffects.set('-1', [1,1,1]);\n\n        const ownedList = Array.from(this.ownedUpgrades);\n        ownedList.forEach(upgradeID => {\n            // stack any effects\n            const upData = upgrades.getById(upgradeID);\n            if (upData) {\n                upData.effects.forEach(effect => {\n                    const businessId = effect[0];\n\n                    // effect types are 1-indexed, since 0 would imply no effect\n                    const effectType = effect[1] - 1;\n                    const effectAmt = effect[2];\n\n                    let newEffect = [1,1,1];\n                    if (upgradeEffects.has(businessId)) {\n                        newEffect = upgradeEffects.get(businessId);\n                    }\n\n                    newEffect[effectType] *= effectAmt;\n\n                    upgradeEffects.set(`${businessId}`, newEffect);\n                })\n            }\n        });\n\n        // second step: run through all the businesses and apply the effects (possibly stacked)\n        const effectsForAll = upgradeEffects.get('-1');\n        // now apply to the businesses themselves\n        this.businessStates.forEach(bState => {\n            bState.resetMultipliers();\n            const applicableToThis = upgradeEffects.get(bState.id);\n            console.log(applicableToThis);\n\n            bState.moneyMultiplier *= effectsForAll[0];\n            bState.costMultiplier *= effectsForAll[1];\n            bState.timeMultiplier *= effectsForAll[2];\n\n            if (applicableToThis) {\n                bState.moneyMultiplier *= applicableToThis[0];\n                bState.costMultiplier *= applicableToThis[1];\n                bState.timeMultiplier *= applicableToThis[2];\n            }\n            // console.log(`${bState.id} money: ${bState.moneyMultiplier} cost: ${bState.costMultiplier} speed: ${bState.timeMultiplier}`);\n        });\n\n    }\n\n    numOwned(bID) {\n        if (this.businessStates.has(bID)) {\n            return this.businessStates.get(bID).numOwned;\n        }\n        return 0;\n    }\n\n    getProgress(bID) {\n        if (this.businessStates.has(bID)) {\n            return this.businessStates.get(bID).fillAmount;\n        }\n        return 0;\n    }\n\n    canCollect(bID) {\n        if (this.businessStates.has(bID)) {\n            return this.businessStates.get(bID).fillAmount > 0.99;\n        }\n        return false;\n    }\n\n    maybeCollectFunds(bID) {\n        if (this.canCollect(bID)) {\n            const moneyCollected = this.businessStates.get(bID).maybeCollect();\n            this.addFunds(moneyCollected);\n        }\n    }\n\n    \n    canStart(bID) {\n        if (this.businessStates.has(bID)) {\n            const bState = this.businessStates.get(bID);\n            return ((bState.numOwned > 0) && (!bState.isTicking));\n        }\n        return false;\n    }\n\n    maybeStartBusiness(bID) {\n        if (this.canStart(bID)) {\n            const bState = this.businessStates.get(bID);\n            bState.startProgress();\n\n            const { playerStats, playerStorage } = this.registry;\n\n            playerStats.registerManualStart(bID);\n            playerStorage.maybeSaveData();\n        }\n    }\n\n    playerHasManager(bID) {\n        if (this.businessStates.has(bID)) {\n            return this.businessStates.get(bID).autoStart;\n        }\n        return false;\n    }\n\n    costForManager(bID) {\n        const { businessLookup } = this.registry;\n        const businessData = this.registry.businessLookup.getBusinessDataById(bID);\n\n        if (businessData) {\n            return businessData.managerCost;\n        }\n        return 0;\n    }\n\n    canAffordManager(bID) {\n        const cost = this.costForManager(bID);\n        return this.canAfford(cost);    \n    }\n\n    purchaseManager(bID) {\n        const cost = this.costForManager(bID);\n        if (this.canAfford(cost)) {\n            if (this.businessStates.has(bID)) {\n                const { playerStorage, playerStats } = this.registry;\n\n                this.chargePlayer(cost);\n                this.businessStates.get(bID).autoStart = true;\n                this.businessStates.get(bID).startProgress();\n                \n                playerStats.registerManagerStart(bID, 1);\n                playerStats.registerManagerBought(bID);\n                playerStorage.saveData();\n            }\n        }\n    }\n\n\n    // update state of each business\n    tick() {\n        const { playerStorage, playerStats } = this.registry;\n\n        const ts = Date.now();\n\n        let totalGain = 0;\n\n        this.businessStates.forEach(bState => {\n            const newFunds = bState.tickAndCollectFunds(ts);\n\n            if (bState.didRestart) {\n                playerStats.registerManagerStart(bState.id, 1);\n            }\n\n            this.addFunds(newFunds);\n            totalGain += newFunds;\n        });\n\n        // if we gained money, maybe save (rate-limit)\n        if (totalGain > 0) {\n            playerStorage.maybeSaveData();\n        }\n\n    }\n}\n\n//# sourceURL=webpack:///./src/js/player/player_inventory.js?");

/***/ }),

/***/ "./src/js/player/player_storage.js":
/*!*****************************************!*\
  !*** ./src/js/player/player_storage.js ***!
  \*****************************************/
/*! exports provided: PlayerStorage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PlayerStorage\", function() { return PlayerStorage; });\n\n/**\n * Class responsible for persisting player data from session to session\n * Starting with a cookie-based approach for now\n */\n\nconst DATA_KEY_PREFIX = 'net.adrianherbez-clicker-';\n\n// don't save more often than this, except when purchasing things\nconst RATE_LIMIT_MS = 2 * 1000;\n\nclass PlayerStorage {\n    constructor(gr) {\n        this.registry = gr;\n        this.lastSaved = -1;\n    }\n\n    loadPlayerData() {\n        const { playerInventory, playerStats } = this.registry;\n\n        // TODO: stats have to be loaded first, since loading the inventory\n        // triggers catchup which in turn triggers stat saving (since money is added)\n        // this isn't ideal and should be fixed, but later\n        const statsData = this.getKey('stats');\n        playerStats.deserialize(statsData);\n\n        const inventoryData = this.getKey('inventory');\n        playerInventory.deserialize(inventoryData);\n\n        console.log(`PLAYER DATA LOADED`);\n    }\n\n    saveData() {\n        // console.log(`saving player data`);\n\n        const { playerInventory, playerStats } = this.registry;\n        \n        const playerData = playerInventory.serialize();\n        this.setKey('inventory', playerData);\n\n        const statsData = playerStats.serialize();\n        this.setKey('stats', statsData);\n\n        this.lastSaved = Date.now();\n    }\n\n    maybeSaveData() {\n        const timeSinceLast = Date.now() - this.lastSaved;\n        if (this.lastSaved === -1 || (timeSinceLast >= RATE_LIMIT_MS)) {\n            this.saveData();\n        }\n    }\n\n    setKey(key, value) {\n        // console.log(`SETTING KEY: ${key} to ${value}`);\n        window.localStorage.setItem(\n            `${DATA_KEY_PREFIX}${key}`,\n            value\n        );\n    }\n\n    getKey(key) {\n        const value = window.localStorage.getItem(`${DATA_KEY_PREFIX}${key}`);\n\n        // console.log(`GETTING KEY ${key} ${value}`);\n        return value;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/player/player_storage.js?");

/***/ }),

/***/ "./src/js/ui/achievement_screen.js":
/*!*****************************************!*\
  !*** ./src/js/ui/achievement_screen.js ***!
  \*****************************************/
/*! exports provided: AchievementPanel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AchievementPanel\", function() { return AchievementPanel; });\n/* harmony import */ var _modal_screen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal_screen */ \"./src/js/ui/modal_screen.js\");\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils */ \"./src/js/common/utils.js\");\n\n\n\nconst WIDTH = 330;\nconst HEIGHT = 40;\n\nclass AchievementPanel extends _modal_screen__WEBPACK_IMPORTED_MODULE_0__[\"ModalScreen\"] {\n    constructor(gr) {\n        super();\n        this.registry = gr;\n    }\n\n    renderAchievement(ctx, aData, locked) {\n        ctx.save();\n        \n        ctx.save();\n        ctx.fillStyle = (locked) ? '#AAA' : '#4F4';\n        ctx.strokeStyle = '#000';\n        Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__[\"drawRoundedRect\"])(ctx, WIDTH, HEIGHT, 5);\n        ctx.fill();\n        ctx.stroke();\n        ctx.restore();\n\n        ctx.save();\n        ctx.fillStyle = '#000';\n        ctx.font = '15px Helvetica';\n        let msg = `${aData.name}: ${(locked ? 'LOCKED' : 'UNLOCKED')}`;\n        ctx.fillText(msg, 20, 17);\n        ctx.font = '12px Helvetica';\n        ctx.fillText(aData.desc, 20, 35);\n        ctx.restore()\n\n        ctx.restore();\n    }\n\n    renderAchievements(ctx) {\n        const { achievements } = this.registry; \n\n        let i = 0;\n        let x = 0;\n        let y = 0;\n\n        ctx.save();\n        ctx.translate(20, 80);\n\n        \n        achievements.getUnlockedAchievements().forEach(aData => {\n            ctx.save();\n            x = (i % 2);\n            y = Math.floor(i /2);\n            ctx.translate((x * 340), (y * 50));\n            this.renderAchievement(ctx, aData, false);\n            i++;\n            ctx.restore();\n        });\n\n        achievements.getLockedAchievements().forEach(aData => {\n            if (!aData.hidden) {\n                ctx.save();\n                x = (i % 2);\n                y = Math.floor(i /2);\n                ctx.translate((x * 340), (y * 50));\n                this.renderAchievement(ctx, aData, true);\n                ctx.restore();\n                i++;\n            }\n        });\n\n        ctx.restore();\n    }\n\n    render(ctx) {\n        super.render(ctx);\n\n        ctx.save();\n        ctx.fillStyle = '#000';\n        ctx.font = '50px helvetica';\n        ctx.translate(10, 60);\n        ctx.fillText('Achievements', 0, 0);\n        ctx.restore();\n    \n        this.renderAchievements(ctx);\n    }\n}\n\n//# sourceURL=webpack:///./src/js/ui/achievement_screen.js?");

/***/ }),

/***/ "./src/js/ui/button.js":
/*!*****************************!*\
  !*** ./src/js/ui/button.js ***!
  \*****************************/
/*! exports provided: ButtonDefaultStyle, Button */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ButtonDefaultStyle\", function() { return ButtonDefaultStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Button\", function() { return Button; });\n/* harmony import */ var _common_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/entity */ \"./src/js/common/entity.js\");\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils */ \"./src/js/common/utils.js\");\n\n\n\nconst ButtonDefaultStyle = {\n    radius: 10,\n    fill: '#AFA',\n    disabledColor: '#AAA',\n    strokeColor: '#000',\n    strokeColorDisabled: '#000',\n    border: 3,    \n}\n\nclass Button extends _common_entity__WEBPACK_IMPORTED_MODULE_0__[\"Entity\"] {\n    constructor(params) {\n        super();\n        this.bounds.x = params.width || 50;\n        this.bounds.y = params.height || 50;\n        this.callback = params.callback || null;\n        this.label = params.label || 'foo';\n\n        this.radius = params.radius || ButtonDefaultStyle.radius;\n        this.backColor = params.fill || ButtonDefaultStyle.fill;\n        this.disabledColor = params.disabledColor || ButtonDefaultStyle.disabledColor;\n        this.strokeColor = params.stroke || ButtonDefaultStyle.strokeColor;\n        this.strokeColorDisabled = params.strokeDisabled || ButtonDefaultStyle.strokeColorDisabled;\n        this.border = params.border || ButtonDefaultStyle.border;\n\n        this.enabled = true;\n    }\n\n    onClick(pos) {\n        if (!this.enabled || !this.visible) return;\n\n        if (this.callback) {\n            this.callback();\n        }\n    }\n\n    drawButtonBack(ctx) {\n        let r = this.radius;\n        let w = this.bounds.x;\n        let h = this.bounds.y;\n\n        ctx.save();\n\n        ctx.fillStyle = (this.enabled) ? this.backColor : this.disabledColor;\n        ctx.strokeStyle = (this.enabled) ? this.strokeColor : this.strokeColorDisabled;\n        ctx.lineWidth = this.border;\n\n        Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__[\"drawRoundedRect\"])(ctx, w, h, r);\n\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.restore();\n    }\n\n    render(ctx) {\n        let w = this.bounds.x;\n        let h = this.bounds.y;\n\n        this.drawButtonBack(ctx);\n\n        ctx.fillStyle = (this.enabled) ? this.strokeColor : this.strokeColorDisabled;\n\n        ctx.save();\n        ctx.textAlign = 'center';\n        ctx.translate(w/2, h/2);\n        ctx.font = '20px helvetica';\n        ctx.fillText(this.label, 0, 0);\n        ctx.restore();\n    }\n}\n\n//# sourceURL=webpack:///./src/js/ui/button.js?");

/***/ }),

/***/ "./src/js/ui/button_buy.js":
/*!*********************************!*\
  !*** ./src/js/ui/button_buy.js ***!
  \*********************************/
/*! exports provided: BuyButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BuyButton\", function() { return BuyButton; });\n/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./button */ \"./src/js/ui/button.js\");\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils */ \"./src/js/common/utils.js\");\n\n\n\nclass BuyButton extends _button__WEBPACK_IMPORTED_MODULE_0__[\"Button\"] {\n    constructor(params) {\n        super(params);\n    \n        this.num = params.num || -1;\n        this.cost = params.cost || 1;\n    }\n\n    render(ctx) {\n        this.drawButtonBack(ctx);\n\n        const buyStr = (this.num > 0) ? `Buy x${this.num}` : 'Buy';\n        const costStr = Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__[\"formatMoney\"])(this.cost);\n\n        ctx.save();\n        ctx.fillStyle = this.strokeColor;\n\n        ctx.font = '20px Helvetica';\n        ctx.textAlign = 'left';\n        ctx.fillText(buyStr, 10, 20);\n\n        ctx.fillText(costStr, 10, 40);\n\n        ctx.restore();\n    }\n}\n\n//# sourceURL=webpack:///./src/js/ui/button_buy.js?");

/***/ }),

/***/ "./src/js/ui/game_screen.js":
/*!**********************************!*\
  !*** ./src/js/ui/game_screen.js ***!
  \**********************************/
/*! exports provided: GameScreen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GameScreen\", function() { return GameScreen; });\n/* harmony import */ var _common_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/entity */ \"./src/js/common/entity.js\");\n/* harmony import */ var _game_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../game_registry */ \"./src/js/game_registry.js\");\n/* harmony import */ var _ui_money_display__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui/money_display */ \"./src/js/ui/money_display.js\");\n/* harmony import */ var _business_business_catalog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../business/business_catalog */ \"./src/js/business/business_catalog.js\");\n/* harmony import */ var _ui_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ui/button */ \"./src/js/ui/button.js\");\n/* harmony import */ var _manager_screen__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./manager_screen */ \"./src/js/ui/manager_screen.js\");\n/* harmony import */ var _stats_screen__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./stats_screen */ \"./src/js/ui/stats_screen.js\");\n/* harmony import */ var _achievement_screen__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./achievement_screen */ \"./src/js/ui/achievement_screen.js\");\n/* harmony import */ var _upgrades_screen__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./upgrades_screen */ \"./src/js/ui/upgrades_screen.js\");\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./styles */ \"./src/js/ui/styles.js\");\n\n\n\n\n\n\n\n\n\n\n\nclass GameScreen extends _common_entity__WEBPACK_IMPORTED_MODULE_0__[\"Entity\"] {\n    constructor(gr) {\n        super();\n        this.registry = gr;\n\n        this.init();\n    }\n\n    init() {\n        this.businessCatalog = new _business_business_catalog__WEBPACK_IMPORTED_MODULE_3__[\"BusinessCatalog\"](this.registry);\n        this.businessCatalog.setPos(10, 60);\n        this.children.push(this.businessCatalog);\n\n        this.cashDisplay = new _ui_money_display__WEBPACK_IMPORTED_MODULE_2__[\"MoneyDisplay\"](this.registry);\n        this.cashDisplay.setPos(10, 50);\n        this.children.push(this.cashDisplay);\n\n        this.resetButton = new _ui_button__WEBPACK_IMPORTED_MODULE_4__[\"Button\"]({\n            label: 'reset',\n            callback: () => {this.resetData();}\n        });\n        this.resetButton.setPos(10, 550);\n        this.children.push(this.resetButton);\n\n\n        this.showAchievementsButton = new _ui_button__WEBPACK_IMPORTED_MODULE_4__[\"Button\"]({\n            label: 'achievements',\n            callback: () => { this.showAchievementsPanel(); },\n            width: 150,\n            height: 40,\n        });\n        this.showAchievementsButton.setPos(220, 550);\n        this.children.push(this.showAchievementsButton);\n\n        this.showStatsButton = new _ui_button__WEBPACK_IMPORTED_MODULE_4__[\"Button\"]({\n            label: 'stats',\n            callback: () => { this.showStatsPanel(); },\n            width: 100,\n            height: 40,\n        });\n        this.showStatsButton.setPos(380, 550);\n        this.children.push(this.showStatsButton);\n\n        this.showManagersButton = new _ui_button__WEBPACK_IMPORTED_MODULE_4__[\"Button\"]({\n            label: 'managers',\n            callback: () => { this.showManagersPanel(); },\n            width: 150,\n            height: 40,\n        });\n        this.showManagersButton.setPos(490, 550);\n        this.children.push(this.showManagersButton);\n\n        this.showUpgradesButton = new _ui_button__WEBPACK_IMPORTED_MODULE_4__[\"Button\"]({\n            label: 'upgrades',\n            callback: () => { this.showUpgradesPanel(); },\n            width: 140,\n            height: 40,\n        });\n        this.showUpgradesButton.setPos(650, 550);\n        this.children.push(this.showUpgradesButton);\n        \n        this.managerPanel = new _manager_screen__WEBPACK_IMPORTED_MODULE_5__[\"ManagerScreen\"](this.registry);\n        this.managerPanel.closeCallback = () => {\n            this.businessCatalog.enabled = true;\n        }\n        this.managerPanel.setPos(20, 20);\n        this.children.push(this.managerPanel);\n        this.managerPanel.visible = false;\n\n        this.statsPanel = new _stats_screen__WEBPACK_IMPORTED_MODULE_6__[\"StatsScreen\"](this.registry);\n        this.statsPanel.closeCallback = () => {\n            this.businessCatalog.enabled = true;\n        }\n        this.statsPanel.setPos(20, 20);\n        this.children.push(this.statsPanel);\n        this.statsPanel.hide();\n\n        this.achievementsPanel = new _achievement_screen__WEBPACK_IMPORTED_MODULE_7__[\"AchievementPanel\"](this.registry);\n        this.achievementsPanel.closeCallback = () => {\n            this.businessCatalog.enabled = true;\n        }\n        this.achievementsPanel.setPos(20, 20);\n        this.children.push(this.achievementsPanel);\n        this.achievementsPanel.hide();\n\n\n        this.upgradesPanel = new _upgrades_screen__WEBPACK_IMPORTED_MODULE_8__[\"UpgradesScreen\"](this.registry);\n        this.upgradesPanel.closeCallback = () => {\n            this.businessCatalog.enabled = true;\n        };\n        this.upgradesPanel.setPos(20, 20);\n        this.children.push(this.upgradesPanel);\n        this.upgradesPanel.hide();\n\n    }\n\n    saveData() {\n        const { playerStorage } = this.registry;\n        playerStorage.saveData();\n    }\n\n    loadData() {\n        const { playerStorage } = this.registry;\n        playerStorage.loadPlayerData();\n\n    }\n\n    resetData() {\n        console.log(`resetting data`);\n\n        const { playerInventory, playerStats, playerStorage, achievements } = this.registry;\n        playerInventory.resetData();\n        playerStats.resetData();\n        achievements.resetData();\n\n        playerStorage.saveData();\n    }\n\n    showManagersPanel() {\n        this.managerPanel.show();\n        this.businessCatalog.enabled = false;\n    }\n\n    showStatsPanel() { \n        this.statsPanel.show();\n        this.businessCatalog.enabled = false;\n    }\n\n    showAchievementsPanel() {\n        this.achievementsPanel.show();\n        this.businessCatalog.enabled = false;\n    }\n\n    showUpgradesPanel() {\n        this.upgradesPanel.show();\n        this.businessCatalog.enabled = false;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/ui/game_screen.js?");

/***/ }),

/***/ "./src/js/ui/manager_panel.js":
/*!************************************!*\
  !*** ./src/js/ui/manager_panel.js ***!
  \************************************/
/*! exports provided: ManagerPanel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ManagerPanel\", function() { return ManagerPanel; });\n/* harmony import */ var _common_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/entity */ \"./src/js/common/entity.js\");\n/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./button */ \"./src/js/ui/button.js\");\n/* harmony import */ var _button_buy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./button_buy */ \"./src/js/ui/button_buy.js\");\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/utils */ \"./src/js/common/utils.js\");\n/* harmony import */ var _ui_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ui/styles */ \"./src/js/ui/styles.js\");\n\n\n\n\n\n\nconst WIDTH = 260;\nconst HEIGHT = 120;\n\nclass ManagerPanel extends _common_entity__WEBPACK_IMPORTED_MODULE_0__[\"Entity\"] {\n    constructor(bd, gr) {\n        super();\n        this.registry = gr;\n        this.businessData = bd;\n\n        this.bounds = {\n            x: WIDTH,\n            y: HEIGHT\n        }\n\n        this.setupButtons();\n    }\n\n    setupButtons() {\n        const { playerInventory } = this.registry;\n        const managerCost = playerInventory.costForManager(this.businessData.id);\n\n        this.buyButton = new _button_buy__WEBPACK_IMPORTED_MODULE_2__[\"BuyButton\"]({\n            label: 'BUY',\n            width: 100,\n            height: 50,\n            callback: () => { this.buyManager(); }\n        });\n        this.buyButton.setPos(WIDTH/2 - 50, HEIGHT/2);\n        this.children.push(this.buyButton);\n\n        this.buyButton.cost = managerCost;\n    }\n\n    buyManager() {\n        const { playerInventory } = this.registry;\n        playerInventory.purchaseManager(this.businessData.id);\n    }\n\n    render(ctx) {\n        const { playerInventory } = this.registry; \n        const playerHasManager = playerInventory.playerHasManager(this.businessData.id);\n        const playerCanAffordManager = playerInventory.canAffordManager(this.businessData.id);\n\n        \n        this.buyButton.enabled = (playerCanAffordManager && !playerHasManager);\n       this.buyButton.visible = !playerHasManager;\n\n        ctx.save();\n        let currColor = _ui_styles__WEBPACK_IMPORTED_MODULE_4__[\"Colors\"].backColorMain;\n        if (playerCanAffordManager) currColor = _ui_styles__WEBPACK_IMPORTED_MODULE_4__[\"Colors\"].backColorOn;\n        if (playerHasManager) currColor = _ui_styles__WEBPACK_IMPORTED_MODULE_4__[\"Colors\"].backColorOff;\n\n        ctx.fillStyle = currColor;\n        Object(_common_utils__WEBPACK_IMPORTED_MODULE_3__[\"drawRoundedRect\"])(ctx, WIDTH, HEIGHT, 10);\n        ctx.fill();\n        ctx.restore();\n\n        ctx.save();\n        const titleStr = `${this.businessData.name}`;\n        ctx.font = '30px helvetica';\n        ctx.fillText(titleStr, 10, 40);\n        ctx.restore();\n\n        \n\n    }\n\n}\n\n//# sourceURL=webpack:///./src/js/ui/manager_panel.js?");

/***/ }),

/***/ "./src/js/ui/manager_screen.js":
/*!*************************************!*\
  !*** ./src/js/ui/manager_screen.js ***!
  \*************************************/
/*! exports provided: ManagerScreen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ManagerScreen\", function() { return ManagerScreen; });\n/* harmony import */ var _common_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/entity */ \"./src/js/common/entity.js\");\n/* harmony import */ var _modal_screen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modal_screen */ \"./src/js/ui/modal_screen.js\");\n/* harmony import */ var _ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui/button */ \"./src/js/ui/button.js\");\n/* harmony import */ var _manager_panel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./manager_panel */ \"./src/js/ui/manager_panel.js\");\n\n\n\n\n\nclass ManagerScreen extends _modal_screen__WEBPACK_IMPORTED_MODULE_1__[\"ModalScreen\"] {\n    constructor(gr) {\n        super();\n        this.registry = gr;\n\n        this.initManagerButtons();\n    }\n\n    initManagerButtons() {\n        const { businessLookup } = this.registry;\n        let i=0;\n        businessLookup.forEach(bData => {\n            let mp = new _manager_panel__WEBPACK_IMPORTED_MODULE_3__[\"ManagerPanel\"](bData, this.registry);\n\n            let x = (i % 2);\n            let y = Math.floor(i /2);\n\n\n            mp.setPos(20 + (x * 270), 130*y+80);\n            this.children.push(mp);\n            i++;\n        });\n\n    }\n\n    render(ctx) {\n        super.render(ctx);\n\n        ctx.save();\n        ctx.fillStyle = '#000';\n        ctx.font = '50px helvetica';\n        ctx.translate(10, 60);\n        ctx.fillText('Buy Managers', 0, 0);\n        ctx.restore();\n    }\n\n}\n\n//# sourceURL=webpack:///./src/js/ui/manager_screen.js?");

/***/ }),

/***/ "./src/js/ui/modal_screen.js":
/*!***********************************!*\
  !*** ./src/js/ui/modal_screen.js ***!
  \***********************************/
/*! exports provided: ModalScreen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ModalScreen\", function() { return ModalScreen; });\n/* harmony import */ var _common_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/entity */ \"./src/js/common/entity.js\");\n/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./button */ \"./src/js/ui/button.js\");\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/utils */ \"./src/js/common/utils.js\");\n/* harmony import */ var _ui_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ui/styles */ \"./src/js/ui/styles.js\");\n\n\n\n\n\nclass ModalScreen extends _common_entity__WEBPACK_IMPORTED_MODULE_0__[\"Entity\"] {\n    constructor() {\n        super();\n\n        this.closeCallback = null;\n    \n        this.closeBtn = new _button__WEBPACK_IMPORTED_MODULE_1__[\"Button\"]({\n            label: 'X',\n            callback: () => { this.onClose(); },\n            width: 40,\n            height: 40,\n            fill: '#fcc',\n            stroke: '#a00',\n        });\n        this.closeBtn.setPos(710, 10);\n        this.children.push(this.closeBtn);\n    }\n\n    onClose() {\n        this.hide();\n\n        if (this.closeCallback) {\n            console.log(`on close CB`);\n            this.closeCallback();\n        }\n    }\n\n    render(ctx) {\n        ctx.save();\n        ctx.fillStyle = _ui_styles__WEBPACK_IMPORTED_MODULE_3__[\"Colors\"].backColorOff; // '#b1b493';\n        Object(_common_utils__WEBPACK_IMPORTED_MODULE_2__[\"drawRoundedRect\"])(ctx, 760, 560, 20);\n        ctx.fill();\n        ctx.stroke();\n        ctx.restore();\n    }\n}\n\n//# sourceURL=webpack:///./src/js/ui/modal_screen.js?");

/***/ }),

/***/ "./src/js/ui/money_display.js":
/*!************************************!*\
  !*** ./src/js/ui/money_display.js ***!
  \************************************/
/*! exports provided: MoneyDisplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MoneyDisplay\", function() { return MoneyDisplay; });\n/* harmony import */ var _common_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/entity */ \"./src/js/common/entity.js\");\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils */ \"./src/js/common/utils.js\");\n\n\n\nclass MoneyDisplay extends _common_entity__WEBPACK_IMPORTED_MODULE_0__[\"Entity\"] {\n    constructor(gr) {\n        super();\n\n        this.gameRegistry = gr; \n    }\n\n    render(ctx) {\n        ctx.font = '50px helvetica';\n        let playerCashStr = Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__[\"formatMoney\"])(this.gameRegistry.playerInventory.currCash);\n        \n        ctx.fillText(playerCashStr, 0, 0);\n\n    }\n}\n\n//# sourceURL=webpack:///./src/js/ui/money_display.js?");

/***/ }),

/***/ "./src/js/ui/stats_screen.js":
/*!***********************************!*\
  !*** ./src/js/ui/stats_screen.js ***!
  \***********************************/
/*! exports provided: StatsScreen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StatsScreen\", function() { return StatsScreen; });\n/* harmony import */ var _modal_screen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal_screen */ \"./src/js/ui/modal_screen.js\");\n\n\nclass StatsScreen extends _modal_screen__WEBPACK_IMPORTED_MODULE_0__[\"ModalScreen\"] {\n    constructor(gr) {\n        super();\n        this.registry = gr;\n    }\n\n    renderStatsText(ctx) {\n        const { playerStats } = this.registry;\n        \n        const statsStrings = playerStats.getStatsText()\n\n        ctx.save();\n        ctx.translate(0, 90);\n        ctx.fillStyle = '#000';\n        ctx.font = '20px helvetica';\n\n        statsStrings.forEach(statText => {\n            // ctx.save();\n            // ctx.translate(10, 0);\n            ctx.fillText(statText[0], 10, 0);\n            ctx.fillText(statText[1], 250, 0);\n            ctx.translate(0, 25);\n        });\n\n        ctx.restore();\n    }\n\n\n    render(ctx) {\n        super.render(ctx);\n\n        ctx.save();\n        ctx.fillStyle = '#000';\n        ctx.font = '50px helvetica';\n        ctx.translate(10, 60);\n        ctx.fillText('Stats', 0, 0);\n        ctx.restore();\n\n        this.renderStatsText(ctx);\n    }\n\n\n\n}\n\n//# sourceURL=webpack:///./src/js/ui/stats_screen.js?");

/***/ }),

/***/ "./src/js/ui/styles.js":
/*!*****************************!*\
  !*** ./src/js/ui/styles.js ***!
  \*****************************/
/*! exports provided: Colors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Colors\", function() { return Colors; });\nconst Colors = {\n    backColorMain: '#e8e4e1',\n    backColorOn: '#ec823a',\n    backColorOff: '#f9c49a',\n    borderColorMain: '#7c3c21',\n    backgroundBlue: '#12cad6',\n}\n\n//# sourceURL=webpack:///./src/js/ui/styles.js?");

/***/ }),

/***/ "./src/js/ui/toast.js":
/*!****************************!*\
  !*** ./src/js/ui/toast.js ***!
  \****************************/
/*! exports provided: ToastPanel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ToastPanel\", function() { return ToastPanel; });\n/* harmony import */ var _common_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/entity */ \"./src/js/common/entity.js\");\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/utils */ \"./src/js/common/utils.js\");\n/* harmony import */ var _ui_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui/styles */ \"./src/js/ui/styles.js\");\n\n\n\n\nconst WIDTH = 300;\nconst HEIGHT = 50;\n\nconst BACK_COLOR = '#AAA';\nconst EDGE_COLOR = '#000';\n\nclass ToastPanel extends _common_entity__WEBPACK_IMPORTED_MODULE_0__[\"Entity\"] {\n    constructor(msg) {\n        super();\n        this.message = msg;\n\n        this.created = Date.now();\n    }\n\n    render(ctx) {\n        ctx.save();\n\n        Object(_common_utils__WEBPACK_IMPORTED_MODULE_1__[\"drawRoundedRect\"])(ctx, WIDTH, HEIGHT, 10);\n\n        ctx.fillStyle = _ui_styles__WEBPACK_IMPORTED_MODULE_2__[\"Colors\"].backgroundBlue;\n        ctx.strokestyle = EDGE_COLOR;\n\n        ctx.fill();\n        ctx.stroke();\n\n        ctx.restore();\n\n        ctx.save();\n        ctx.fillStyle = '#000';\n        ctx.font = '20px Helvetica';\n        ctx.fillText(this.message, 10, HEIGHT/2);\n\n        ctx.restore();\n\n    }\n}\n\n//# sourceURL=webpack:///./src/js/ui/toast.js?");

/***/ }),

/***/ "./src/js/ui/toast_manager.js":
/*!************************************!*\
  !*** ./src/js/ui/toast_manager.js ***!
  \************************************/
/*! exports provided: ToastManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ToastManager\", function() { return ToastManager; });\n/* harmony import */ var _common_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/entity */ \"./src/js/common/entity.js\");\n/* harmony import */ var _toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toast */ \"./src/js/ui/toast.js\");\n\n\n\nconst TIME_TO_DISPLAY_SEC = 3;\n\nclass ToastManager extends _common_entity__WEBPACK_IMPORTED_MODULE_0__[\"Entity\"] {\n    constructor(gr) {\n        super();\n        this.registry = gr;\n\n        this.toasts = [];\n\n        this.lastTime = Date.now();\n    }\n\n    showToast(msg) {\n        console.log(`showing toast: ${msg}`);\n\n        let t = new _toast__WEBPACK_IMPORTED_MODULE_1__[\"ToastPanel\"](msg);\n        t.setPos(490, 10);\n\n        this.toasts.push(t);\n        this.children.push(t);\n    }\n\n    updateToasts() {\n        let currTime = Date.now();\n\n        this.toasts.forEach(toast => {\n            if (currTime >= (toast.created + (TIME_TO_DISPLAY_SEC * 1000))) {\n                toast.visible = false;\n            }\n        });\n\n        this.children = this.children.filter(c => {\n            return c.visible;\n        });\n    }\n\n    render(ctx) {\n        this.updateToasts();\n    }\n}\n\n//# sourceURL=webpack:///./src/js/ui/toast_manager.js?");

/***/ }),

/***/ "./src/js/ui/upgrade_button.js":
/*!*************************************!*\
  !*** ./src/js/ui/upgrade_button.js ***!
  \*************************************/
/*! exports provided: UpgradeButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UpgradeButton\", function() { return UpgradeButton; });\n/* harmony import */ var _common_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/entity */ \"./src/js/common/entity.js\");\n/* harmony import */ var _button_buy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./button_buy */ \"./src/js/ui/button_buy.js\");\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/utils */ \"./src/js/common/utils.js\");\n\n\n \n\nconst WIDTH = 600;\nconst HEIGHT = 120;\n\nclass UpgradeButton extends _common_entity__WEBPACK_IMPORTED_MODULE_0__[\"Entity\"] {\n    constructor(upData, gr) {\n        super();\n        this.registry = gr;\n        this.upData = upData;\n        this.requirementStr = '';\n        \n        this.requirementsMet = false;\n        this.canAfford = false;\n        this.purchased = false;\n\n        this.buyButton = new _button_buy__WEBPACK_IMPORTED_MODULE_1__[\"BuyButton\"]({\n            label: 'BUY',\n            width: 100,\n            height: 50,\n            callback: () => { this.buyUpgrade(); }\n        });\n        this.buyButton.cost = this.upData.cost;\n        this.buyButton.setPos(WIDTH - 110, HEIGHT - 60);\n        this.children.push(this.buyButton);\n\n        this.setRequirementString();\n    }\n\n    setRequirementString() {\n        const { achievements } = this.registry;\n\n        const achievementNames = [];\n        this.upData.requirements.forEach(aID => {\n            const ach = achievements.getAchievementById(`${aID}`);\n            console.log(aID, ach);\n            if (ach !== null) {\n                achievementNames.push(ach.name);\n            }\n        });\n        this.requirementStr = `Requires: ${achievementNames.join(', ')}`;\n    }\n\n    buyUpgrade() {\n        const { playerInventory } = this.registry;\n        playerInventory.maybePurchaseUpgrade(this.upData.id);\n    }\n\n    updateState() {\n        const { achievements, playerInventory } = this.registry;\n\n        // if it's already been bought, don't check anything\n        if (this.purchased) return;\n\n        // check to see if the player owns it\n        this.purchased = playerInventory.playerOwnsUpgrade(this.upData.id);\n\n        // see if requirements have been met\n        if (!this.requirementsMet) {\n            this.requirementsMet = achievements.playerHasUnlockedAll(this.upData.requirements)\n        }\n        this.canAfford = playerInventory.canAfford(this.upData.cost);\n    }\n\n    render(ctx) {\n        // TODO: this really shouldn't be checked each frame\n        this.updateState();\n\n        if (this.purchased || !this.requirementsMet) {\n            this.buyButton.hide();\n        } else {\n            this.buyButton.show();\n\n            if (this.canAfford) {\n                this.buyButton.enabled = true;\n            } else {\n                this.buyButton.enabled = false;\n            }\n        }\n\n        ctx.save();\n        ctx.fillStyle = (this.requirementsMet) ? '#aaf' : '#aaa';\n        ctx.strokeStyle = '#000';\n\n        Object(_common_utils__WEBPACK_IMPORTED_MODULE_2__[\"drawRoundedRect\"])(ctx, WIDTH, HEIGHT, 10);\n        ctx.fill();\n        ctx.stroke();\n        ctx.restore();\n\n        ctx.save();\n        ctx.font = '30px Helvetica';\n        ctx.fillText(this.upData.name, 20, 30);\n        ctx.restore();\n    \n        ctx.save();\n        ctx.font = '20px Helvetica';\n        ctx.fillText(this.upData.desc, 20, 55);\n        ctx.restore();\n        \n        ctx.save();\n        ctx.font = '20px Helvetica';\n        ctx.fillText(this.requirementStr, 20, 75);\n        ctx.restore();\n    \n    }\n}\n\n//# sourceURL=webpack:///./src/js/ui/upgrade_button.js?");

/***/ }),

/***/ "./src/js/ui/upgrades_screen.js":
/*!**************************************!*\
  !*** ./src/js/ui/upgrades_screen.js ***!
  \**************************************/
/*! exports provided: UpgradesScreen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UpgradesScreen\", function() { return UpgradesScreen; });\n/* harmony import */ var _modal_screen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal_screen */ \"./src/js/ui/modal_screen.js\");\n/* harmony import */ var _upgrade_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./upgrade_button */ \"./src/js/ui/upgrade_button.js\");\n\n\n\nclass UpgradesScreen extends _modal_screen__WEBPACK_IMPORTED_MODULE_0__[\"ModalScreen\"] {\n    constructor(gr) {\n        super();\n        this.registry = gr;\n\n        this.upgradeButtons = [];\n        this.initUpgradeButtons();\n    }\n\n    initUpgradeButtons() {\n        const { upgrades, playerInventory, playerStats } = this.registry;\n\n        upgrades.getAll().forEach((upData, index) => {\n            let upgradeButton = new _upgrade_button__WEBPACK_IMPORTED_MODULE_1__[\"UpgradeButton\"](upData, this.registry);\n\n            upgradeButton.setPos(20, (index * 130 + 70));\n\n            this.upgradeButtons.push(upgradeButton);\n            this.children.push(upgradeButton);\n        });\n\n    }\n\n    render(ctx) {\n        super.render(ctx);\n\n        ctx.save();\n        ctx.fillStyle = '#000';\n        ctx.font = '50px helvetica';\n        ctx.translate(10, 60);\n        ctx.fillText('Buy Upgrades', 0, 0);\n        ctx.restore();\n    }\n}\n\n//# sourceURL=webpack:///./src/js/ui/upgrades_screen.js?");

/***/ }),

/***/ "./src/js/upgrades/achievements.js":
/*!*****************************************!*\
  !*** ./src/js/upgrades/achievements.js ***!
  \*****************************************/
/*! exports provided: AchievementData, Rel, AchievementTracker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AchievementData\", function() { return AchievementData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rel\", function() { return Rel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AchievementTracker\", function() { return AchievementTracker; });\nclass AchievementData {\n    constructor(data) {\n        this.id = data.id || -1;\n        this.name = data.name || '';\n        this.desc = data.desc || '';\n        this.hidden = data.hidden || false;\n        this.criteria = data.criteria || [];\n        this.unlocked = false;\n    }\n}\n\nconst Rel = {\n    GE: 1,  // greater than\n    LE: 2,  // less than\n    GE_EQ: 3,   // greater than or equal to\n    LE_EQ: 4    // less than or equal to\n}\n\nclass AchievementTracker {\n    constructor(gr) {\n        this.registry = gr;\n    \n        this.achievementLookup = new Map();\n        this.achievementsLocked = new Set();\n        this.achievementsUnlocked = new Set();\n\n        // start this as false, only set to true once everything is loaded\n        this.notifyPlayer = false;\n    }\n\n    initFromData(achievementJSON) {\n        achievementJSON.forEach(aData => {\n            let achievement = new AchievementData(aData);\n            this.achievementLookup.set(aData.id, achievement);\n            this.achievementsLocked.add(aData.id);\n        });\n    }\n\n    resetData() {\n        this.achievementsUnlocked = new Set();\n        this.achievementLookup.forEach(aData => {\n            this.achievementsLocked.add(aData.id);\n        })\n    }\n\n    getAchievementById(aID) {\n        if (this.achievementLookup.has(aID)) {\n            return this.achievementLookup.get(aID);\n        }\n        return null;\n    }\n\n    achievementIsUnlocked(aID) {\n        return (this.achievementsUnlocked.has(aID));\n    }\n\n    playerHasUnlockedAll(idArray) {\n        for (let i=0; i < idArray.length; i++) {\n            if (!this.achievementIsUnlocked(idArray[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    unlockAchievement(aID) {\n        if (this.achievementsLocked.has(aID)) {\n            this.achievementsUnlocked.add(aID);\n            this.achievementsLocked.delete(aID);\n\n            this.achievementLookup.get(aID).unlocked = true;\n            return true;\n        }\n        return false;\n    }\n\n    getLockedAchievements() {\n        let lockedIDs = Array.from(this.achievementsLocked);\n\n        return lockedIDs.map(id => {\n            return this.achievementLookup.get(id);\n        });\n    }\n\n    getUnlockedAchievements() {\n        let unlockedIDs = Array.from(this.achievementsUnlocked);\n        return unlockedIDs.map(id => this.achievementLookup.get(id));  \n    }\n\n    _checkCriteria(statValue, targetValue, relationship) {\n        switch (relationship) {\n            case Rel.GE:\n                return (statValue > targetValue);\n            case Rel.LE:\n                return (statValue < targetValue);\n            case Rel.GE_EQ:\n                return (statValue >= targetValue);\n            case Rel.LE_EQ:\n                return (statValue <= targetValue);\n            default:\n                return false;\n        }\n    }\n\n    _allCriteriaMet(aID) {\n        if (!this.achievementLookup.has(aID)) return false;\n\n        const { playerStats } = this.registry;\n        const achievementData = this.achievementLookup.get(aID);\n        const { criteria } = achievementData;\n        for (let i=0; i < criteria.length; i++ ) {\n            let currentValue = playerStats.maybeGetStat(criteria[i][0]);\n            if (!this._checkCriteria(currentValue, criteria[i][1], criteria[i][2])) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n\n    checkAchievements() {\n        this.achievementLookup.forEach(achievement => {\n            let unlocked = this._allCriteriaMet(achievement.id);\n\n            if (unlocked && this.achievementsLocked.has(achievement.id)) {\n                this.unlockAchievement(achievement.id);\n                if (this.notifyPlayer) {\n                    console.log(`Unlocked ${achievement.name}`);\n                \n                    let msg = `Unlocked: ${achievement.name}`;\n                    this.registry.toasts.showToast(msg);\n                }\n            }\n        });\n    }\n\n\n}\n\n//# sourceURL=webpack:///./src/js/upgrades/achievements.js?");

/***/ }),

/***/ "./src/js/upgrades/player_stats.js":
/*!*****************************************!*\
  !*** ./src/js/upgrades/player_stats.js ***!
  \*****************************************/
/*! exports provided: Stats, PlayerStats */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Stats\", function() { return Stats; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PlayerStats\", function() { return PlayerStats; });\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/utils */ \"./src/js/common/utils.js\");\n\n\n/**\n * Responsible for tracking player stats\n * \n * Exposes a variety of specific functions that are syntactic sugar wrappers around\n * one or more of the base stat-altering functions.\n */\n\nconst Stats = {\n    MONEY_EARNED: 1,\n    MONEY_SPENT: 2,\n    BUSINESS_OWNED: 3,\n    MANAGERS_BOUGHT_NUM: 4,\n    UPGRADES_BOUGHT_NUM: 5,\n    BUSINESS_BOUGHT_TOTAL: 6,\n    MANUAL_STARTS: 7,\n    MANAGER_STARTS: 8,\n\n    // keeping list-based stats IDs separate\n    MANAGERS_BOUGHT_LIST: 100,\n    UPGRADES_BOUGHT_LIST: 101,\n    ACHIEVEMENTS_UNLOCKED: 102,\n\n    // offset for tracking num businesses owned\n    OWNED_BUSINESS_OFFSET: 200\n};\n\nclass PlayerStats {\n    constructor(gr) {\n        this.registry = gr;\n\n        this.stats = new Map();\n    }\n\n    // serialize stats for saving data\n    serialize() {\n        const statsData = [];\n\n        // write out simple values directly\n        this.stats.forEach((statValue, statID) => {\n            // handle the Set-based stats\n            if (typeof statValue === 'object') {\n                statsData.push([\n                    1,\n                    statID,\n                    Array.from(statValue)\n                ]);\n            } else {\n                // simple stats\n                statsData.push([\n                    0, // flag to identify listings\n                    statID,\n                    statValue\n                ]);\n            }\n        });\n        // console.log(`STATS TO SAVE: ${JSON.stringify(statsData)}`);\n        return JSON.stringify(statsData);\n    }\n\n    deserialize(dataStr) {\n        // console.log(`Setting stats from ${dataStr}`);\n        const statData = JSON.parse(dataStr);\n\n        statData.forEach(statEntry => {\n            let isSet = (statEntry[0] === 1);\n            let statID = statEntry[1];\n            let valueOrValues = statEntry[2];\n\n            if (isSet) {\n                const s = new Set();\n                valueOrValues.forEach(v => {\n                    s.add(v);\n                })\n                this.stats.set(statID, s);\n            } else {\n                this.stats.set(statID, valueOrValues);\n            }\n        });\n\n        // console.log('LOADED STATS', this.stats);\n    }\n\n    resetData() {\n        this.stats = new Map();\n    }\n\n    getStatsText() {\n        const statsText = [];\n\n        statsText.push([\n            'Total Money Earned', \n            Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__[\"formatMoney\"])(this.maybeGetStat(Stats.MONEY_EARNED, 0))]);\n        statsText.push([\n            'Total Money Spent',\n            Object(_common_utils__WEBPACK_IMPORTED_MODULE_0__[\"formatMoney\"])(this.maybeGetStat(Stats.MONEY_SPENT, 0))]);\n        statsText.push(['Buinesses Bought', this.maybeGetStat(Stats.BUSINESS_BOUGHT_TOTAL, 0)]);\n        statsText.push(['Manual Starts', this.maybeGetStat(Stats.MANUAL_STARTS, 0)]);\n        statsText.push(['Managers Hired', this.maybeGetStat(Stats.MANAGERS_BOUGHT_NUM, 0)]);\n        statsText.push(['Manager Starts', this.maybeGetStat(Stats.MANAGER_STARTS, 0)]);\n        statsText.push(['Upgrades Purchased', this.maybeGetStat(Stats.UPGRADES_BOUGHT_NUM, 0)]);\n\n        return statsText;\n    }\n\n    registerMoneySpent(num) {\n        if (num < 0) return;\n        this._incrementStat(Stats.MONEY_SPENT, num);\n    }\n\n    registerMoneyEarned(num) {\n        this._incrementStat(Stats.MONEY_EARNED, num);\n    }\n\n    registerManagerBought(bID) {\n        this._incrementStat(Stats.MANAGERS_BOUGHT_NUM);\n        this._addToStatList(Stats.MANAGERS_BOUGHT_LIST, bID);\n    }\n\n    registerUpgradeBought(upgradeID) {\n        this._incrementStat(Stats.UPGRADES_BOUGHT_NUM);\n        this._addToStatList(Stats.UPGRADES_BOUGHT_LIST, upgradeID);\n    }\n\n    registerManualStart(bID) {\n        this._incrementStat(Stats.MANUAL_STARTS);\n    }\n\n    registerManagerStart(bID, num = 1) {\n        this._incrementStat(Stats.MANAGER_STARTS, num);\n    }\n\n    registerBusinessBought(bID) {\n        // just add one to the total businesses (number owned per business is already tracked\n        // in player inventory, so let's not duplicate data)\n        this._incrementStat(Stats.BUSINESS_BOUGHT_TOTAL);\n    }\n\n    // used to replace the current value of a stat\n    _setStat(statID, value, checkAchievements = true) {\n        // console.log(`setting stat: ${statID} to ${value}`);\n        this.stats.set(statID, value);\n\n        if (checkAchievements) {\n            this.registry.achievements.checkAchievements();\n        }\n    }\n\n    // used for stats that should be additive\n    _incrementStat(statID, value = 1) {\n        // console.log(`incrementing stat: ${statID} by ${value}`)\n\n        if (this.stats.has(statID)) {\n            const newValue = this.stats.get(statID) + value;\n            this.stats.set(statID, newValue);\n        } else {\n            this._setStat(statID, value);\n        }\n\n        this.registry.achievements.checkAchievements();\n    }\n\n    // track the maximum reached\n    _markMaxStat(statID, value) {\n        let prevValue = -Infinity;\n        if (this.stats.has(statID)) {\n            prevValue = this.stats.get(statID);\n        }\n        let newValue = (value > prevValue) ? value : prevValue;\n        this.stats.set(statID, newValue);\n\n        this.registry.achievements.checkAchievements();\n    }\n\n    // track minimum reached (not using this yet, but adding for completeness)\n    _markMinStat(statID, value) {\n        let prevValue = Infinity;\n        if (this.stats.has(statID)) {\n            prevValue = this.stats.get(statID);\n        }\n        let newValue = (value < prevValue) ? value : prevValue;\n        this.stats.set(statID, newValue);\n\n        this.registry.achievements.checkAchievements();\n    }\n\n    // used to track things like upgrades bought and achievments unlocked\n    _addToStatList(statID, value) {\n        if (!this.stats.has(statID)) {\n            this.stats.set(statID, new Set());\n        }\n        const list = this.stats.get(statID);\n        list.add(value);\n\n        this.registry.achievements.checkAchievements();\n    }\n\n    maybeGetStat(statID, defaultValue = null) {\n        // special case for getting number of owned businesss from \n        // player inventory instead of duplicating data here\n        if (statID >= Stats.OWNED_BUSINESS_OFFSET) {\n            statID -= Stats.OWNED_BUSINESS_OFFSET;\n\n            const { playerInventory } = this.registry;\n            return playerInventory.numOwned(''+statID);\n        }\n\n        if (this.stats.has(statID)) {\n            return this.stats.get(statID);\n        }\n        return defaultValue;\n    }\n\n}\n\n//# sourceURL=webpack:///./src/js/upgrades/player_stats.js?");

/***/ }),

/***/ "./src/js/upgrades/upgrades.js":
/*!*************************************!*\
  !*** ./src/js/upgrades/upgrades.js ***!
  \*************************************/
/*! exports provided: EffectTypes, UpgradeData, UpgradesList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EffectTypes\", function() { return EffectTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UpgradeData\", function() { return UpgradeData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UpgradesList\", function() { return UpgradesList; });\nconst EffectTypes = {\n    MONEY_MULT: 1,  // more revenue per event\n    COST_MULT: 2,   // less cost per upgrade\n    SPEED_MULT: 3   // less time per event\n};\n\nclass UpgradeData {\n    constructor(data) {\n        this.id = data.id || -1;\n        this.name = data.name || '';\n        this.desc = data.desc || '';\n        this.requirements = data.requirements || [];\n        this.effects = data.effects || [];\n        this.cost = data.cost || 0;\n    }\n\n}\n\nclass UpgradesList {\n    constructor(gr) {\n        this.registry = gr;\n\n        this.upgradeLookup = new Map();\n\n    }\n\n    initFromData(upgradeJSON) {\n        console.log(upgradeJSON);\n\n        upgradeJSON.forEach(upData => {\n            let upgrade = new UpgradeData(upData);\n            this.upgradeLookup.set(upgrade.id, upgrade);\n        });\n\n        console.log(`Loaded ${this.upgradeLookup.size} upgrades`);\n    }\n    \n    getById(upID) {\n        if (this.upgradeLookup.has(upID)) {\n            return this.upgradeLookup.get(upID);\n        }\n        return null;\n    }\n\n    getAll() {\n        return Array.from(this.upgradeLookup.values());\n    }\n}\n\n//# sourceURL=webpack:///./src/js/upgrades/upgrades.js?");

/***/ })

/******/ });